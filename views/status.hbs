 <script type="text/javascript" src="../js/eventemitter2.min.js"></script>
 <script type="text/javascript" src="../js/roslib.min.js"></script>

<script type="text/javascript" src="http://cdn.robotwebtools.org/EaselJS/current/easeljs.min.js"></script>
<script type="text/javascript" src="http://cdn.robotwebtools.org/EventEmitter2/current/eventemitter2.min.js"></script>
<script type="text/javascript" src="http://cdn.robotwebtools.org/roslibjs/current/roslib.min.js"></script>
<script type="text/javascript" src="http://cdn.robotwebtools.org/ros2djs/current/ros2d.min.js"></script>
<script type="text/javascript" src="http://cdn.robotwebtools.org/nav2djs/current/nav2d.min.js"></script>



 {{!--<script type="text/javascript" type="text/javascript">
    // Connecting to ROS
    // -----------------
    var ros = new ROSLIB.Ros({
        url : 'ws://172.18.4.28:9090'
    });
    ros.on('connection', function() {
        var element = document.getElementById("status");
        element.innerHTML = "ROS Bridge Status: OK";
        console.log('Connected to websocket server.');
    });
    ros.on('error', function(error) {
        var element = document.getElementById("status");
        element.innerHTML = "ROS Bridge Status: ERROR";
        console.log('Error connecting to websocket server: ', error);
    });
    ros.on('close', function() {
        var element = document.getElementById("status");
        element.innerHTML = "ROS Bridge Status: CLOSE";
        console.log('Connection to websocket server closed.');
    });

    // Subscribing to a Topic
    // ----------------------

    var listener = new ROSLIB.Topic({
        ros : ros,
        //topic name
        name : '/listener',
        messageType : 'std_msgs/String'
    });

    listener.subscribe(function(message) {
        console.log('Received message on ' + listener.name + ': ' + message.data);
        var element = document.getElementById("dstatus");
        if(message.data == "finish"){
            console.log("123");
            element.innerHTML= "Delivery status: " + message.data;
            document.getElementById("button-wn-show-preset").click();
        }
        else{
            console.log("456");
            element.innerHTML= "Delivery status: Not finish" ;
        }
        listener.unsubscribe();
    });

    var moveClient = new ROSLIB.ActionClient({
        ros: ros,
        serverName : '/move_base',
        actionName : 'MoveBaseActionGoal'
    });

    var goal = new ROSLIB.Goal({
        actionClient : moveClient,
        goalMessage : {
            target_pose:{
                header: {
                    frame_id : 'map'               
                },
                pose: {
                        position:{
                            x: 2.9,
                            y: 1.9,
                            z: 0.0
                        },
                        orientation:{
                            x : 0.0,
                            y : 0.0,
                            z : 0.046,
                            w : 0.998
                        }
                }
            }
        }
    });
 goal.on('feedback', function(feedback) {
    console.log('Feedback: ' + feedback.sequence);
    });

  goal.on('result', function(result) {
    console.log('Final Result: ' + result.sequence);
  });

    
</script>--}}



{{!--<script type="text/javascript" type="text/javascript">
  /**
   * Setup all visualization elements when the page is loaded.
   */
  function init() {
    // Connect to ROS.
    var ros = new ROSLIB.Ros({
      url : 'ws://172.18.4.28:9090'
    });
    console.log("testing");
    // Create the main viewer.
    var viewer = new ROS2D.Viewer({
      divID : 'map',
      width : 400,
      height : 400
    });

    // Setup the map client.
    var gridClient = new ROS2D.OccupancyGridClient({
      ros : ros,
      topic: '/gmapping/map',
      rootObject : viewer.scene,
      continuous : false
    });
    // Scale the canvas to fit to the map
    gridClient.on('change', function(){
      viewer.scaleToDimensions(gridClient.currentGrid.width, gridClient.currentGrid.height);
    });
  }
</script>--}}

<script type="text/javascript">
  /**
   * Setup all GUI elements when the page is loaded.
   */
  function init() {
    // Connect to ROS.
    var ros = new ROSLIB.Ros({
      url : 'ws://localhost:9090'
    });

    // Create the main viewer.
    var viewer = new ROS2D.Viewer({
      divID : 'nav',
      width : 750,
      height : 800
    });

    // Setup the nav client.
    var nav = NAV2D.OccupancyGridClientNav({
      ros : ros,
      rootObject : viewer.scene,
      viewer : viewer,
      //action server
      serverName : '/move_base'
    });
  }
</script>




<!-- Page Heading/Breadcrumbs -->
<div class="row">
      <div class="col-lg-12">
          <h1 class="page-header">Current Status
              <small>Map creation and Server status</small>
          </h1>
          <ol class="breadcrumb">
              <li><a href="/">Home</a>
              </li>
              <li class="active">Status</li>
          </ol>
      </div>
</div>

<div class="row">
        <div id="map" > 
              <button onclick="init()"></button>
          </div>
      <div class="col-md-5">
          <h3>Generated Map</h3>

      </div>
      <div class="col-md-5">
          <h3>ROS Bridge Status: </h3>
          <hr>
          <p id=status></p>
          <h3>Robot Status</h3>
          <hr>
          <p id=rstatus>Robot Status: </p>
          <h3>Delivery Status</h3>
          <hr>
          <p id=dstatus> Delivery status: Not finish</p>
          <button onclick="goal.send()"> Send motion</button>

      </div>
</div>

